Test cases for module 2-matrix_divided
======================================

``matrix_divided(matrix, div)`` is a function that defines a matrix division
 
Usage
=====

Importing function ``matrix_divided`` from module ``2-matrix_divided``

	>>> matrix_divided = __import__('2-matrix_divided').matrix_divided

:

	>>> matrix_divided([[1, 2, 3], [4, 5, 6]], 3)
	[[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]

:

	>>> matrix_divided([[1, -2, 3.0], [4, 5, 6]], 3)
	[[0.33, -0.67, 1.0], [1.33, 1.67, 2.0]]

:

	>>> matrix_divided([[1, 2, 3], [2,3], [4, 6, 7]], 3)
	Traceback (most recent call last):
	TypeError: Each row of the matrix must have the same size

:

	>>> matrix_divided([[1, '2', 3], [4, 5, 6, 7]], 3)
	Traceback (most recent call last):
	TypeError: matrix must be a matrix (list of lists) of integers/floats

:

	>>> matrix_divided(None, 3)
	Traceback (most recent call last):
	TypeError: matrix must be a matrix (list of lists) of integers/floats

:

	>>> matrix_divided([], 3)
	Traceback (most recent call last):
	TypeError: matrix must be a matrix (list of lists) of integers/floats

:

	>>> matrix_divided([[], [], []], 3)
	[[], [], []]

:

	>>> matrix_divided([[1, 2, 3], [4, 5, 6, 7]], 0)
	Traceback (most recent call last):
	ZeroDivisionError: division by zero

:

	>>> matrix_divided([[1, 2, 3], [4, 5, 6, 7]], '0')
	Traceback (most recent call last):
	TypeError: div must be a number
